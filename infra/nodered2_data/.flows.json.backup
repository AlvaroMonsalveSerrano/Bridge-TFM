[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "FlujoEjemplo1-holamundo-1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f33dba26b5d932b6",
        "type": "tab",
        "label": "FlujoEjemplo2-holamundo-2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b12cd9fe272c520e",
        "type": "tab",
        "label": "FlujoEjemplo3-http-transform",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2de32fdfc3deede9",
        "type": "tab",
        "label": "FlujoEjemplo4-switch",
        "disabled": false,
        "info": "Ejemplo de uso del nodo Template.\nReferencia documental: https://nodered.org/docs/user-guide/nodes",
        "env": []
    },
    {
        "id": "e47078fd8feec00c",
        "type": "tab",
        "label": "FujoEjemplo5-funciones",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "13a968db28f44d59",
        "type": "tab",
        "label": "FlujoEjemplo6-messages",
        "disabled": false,
        "info": "Ejemplo de uso de mensajes",
        "env": []
    },
    {
        "id": "0866e63f3966cd60",
        "type": "tab",
        "label": "FlujoEjemplo7-handle-error",
        "disabled": false,
        "info": "Ejemplo de manejo de errores.",
        "env": []
    },
    {
        "id": "72fabedfb7dbb86e",
        "type": "tab",
        "label": "FlujoEjemplo8-Mosquitto",
        "disabled": false,
        "info": "Ejemplo de conexión con el broker Mosquitto.",
        "env": []
    },
    {
        "id": "32fa710f8ce72da8",
        "type": "tab",
        "label": "TFM",
        "disabled": false,
        "info": "Definición de los flujos de las operaciones del TFM.",
        "env": []
    },
    {
        "id": "c8b203d85105f0cf",
        "type": "mqtt-broker",
        "name": "Mosquitto",
        "broker": "mosquitto",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "3",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "0bcf57a68d6eff7b",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "InfluxDB-Docker",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://influxDB:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "3cc11d24.ff01a2",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "WARNING: please check you have started this container with a volume that is mounted to /data\\n otherwise any flow changes are lost when you redeploy or upgrade the container\\n (e.g. upgrade to a more recent node-red docker image).\\n  If you are using named volumes you can ignore this warning.\\n Double click or see info side panel to learn how to start Node-RED in Docker to save your work",
        "info": "\nTo start docker with a bind mount volume (-v option), for example:\n\n```\ndocker run -it -p 1880:1880 -v /home/user/node_red_data:/data --name mynodered nodered/node-red\n```\n\nwhere `/home/user/node_red_data` is a directory on your host machine where you want to store your flows.\n\nIf you do not do this then you can experiment and redploy flows, but if you restart or upgrade the container the flows will be disconnected and lost. \n\nThey will still exist in a hidden data volume, which can be recovered using standard docker techniques, but that is much more complex than just starting with a named volume as described above.",
        "x": 350,
        "y": 80,
        "wires": []
    },
    {
        "id": "a5fdec2b1294eb4f",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "InyectorEjemplo1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "d468ebd8e7453d38"
            ]
        ]
    },
    {
        "id": "0aab75547c3b0c7f",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debugEjemplo1",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 260,
        "wires": []
    },
    {
        "id": "d468ebd8e7453d38",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "FuncionEjemplo1",
        "func": "// Create a Date object from the payload\nvar date = new Date(msg.payload);\n\n// Change the payload to be a formatted Date string\nmsg.payload = date.toString();\n\n// Return the message so it can be sent on\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 260,
        "wires": [
            [
                "0aab75547c3b0c7f"
            ]
        ]
    },
    {
        "id": "da64ae2ab0da8011",
        "type": "inject",
        "z": "f33dba26b5d932b6",
        "name": "InjectTImestamp-5seg",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 120,
        "wires": [
            [
                "376d6a324accc6ea"
            ]
        ]
    },
    {
        "id": "376d6a324accc6ea",
        "type": "debug",
        "z": "f33dba26b5d932b6",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 120,
        "wires": []
    },
    {
        "id": "b7b938c1eb25f5da",
        "type": "csv",
        "z": "b12cd9fe272c520e",
        "name": "CSV",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": false,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 470,
        "y": 320,
        "wires": [
            [
                "350356c908ac3d96",
                "211ecb471df414df"
            ]
        ]
    },
    {
        "id": "350356c908ac3d96",
        "type": "debug",
        "z": "b12cd9fe272c520e",
        "name": "DebugCSV",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 320,
        "wires": []
    },
    {
        "id": "aad3b64a80a231fc",
        "type": "inject",
        "z": "b12cd9fe272c520e",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 320,
        "wires": [
            [
                "24e48cd863c1392e"
            ]
        ]
    },
    {
        "id": "24e48cd863c1392e",
        "type": "http request",
        "z": "b12cd9fe272c520e",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/significant_month.csv",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 290,
        "y": 320,
        "wires": [
            [
                "b7b938c1eb25f5da"
            ]
        ]
    },
    {
        "id": "211ecb471df414df",
        "type": "switch",
        "z": "b12cd9fe272c520e",
        "name": "FiltroColumnaMag>=7",
        "property": "payload.mag",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "7",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 680,
        "y": 440,
        "wires": [
            [
                "45918ee27c87d46c"
            ]
        ]
    },
    {
        "id": "45918ee27c87d46c",
        "type": "change",
        "z": "b12cd9fe272c520e",
        "name": "Cambio",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "PANIC!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 440,
        "wires": [
            [
                "2cd5b56167d8d6d3"
            ]
        ]
    },
    {
        "id": "2cd5b56167d8d6d3",
        "type": "debug",
        "z": "b12cd9fe272c520e",
        "name": "DebugSwitch",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 440,
        "wires": []
    },
    {
        "id": "6b1d5f31827f16cb",
        "type": "comment",
        "z": "b12cd9fe272c520e",
        "name": "Uso de nodos: función http, parseo de csv y función de filtro. Simula la lectura de una funete de datos la cual en función de un valor se realiza una acción.",
        "info": "# Flujo 3\n\n## Objetivo\nUso de los nodos de red http, parseo de ficheros CSV y\nfunción de cambio de valores.\n\nSimula la lectura de una funete de datos la cual en función de un valor se realiza una acción.\n\n## Secuencia de flujo\nEl flujo de trabajo realiza las siguientes operaciones:\n 1. Descarga de un fichero CSV mediante una petición HTTP.\n 2. Parseo del documento CSV\n    2.1.- Escribir en la consola de debug el contenido del fichero.\n    2.2.- Filtrar cada línea del fichero.\n        2.2.1.- Si la columna mag es mayor que 7 entonces pasar a la siguiente operación.\n        2.2.2.- Modificar el valor pasado por el texto PANIC.\n\n\n",
        "x": 550,
        "y": 100,
        "wires": []
    },
    {
        "id": "df219b8ff3cf2591",
        "type": "inject",
        "z": "2de32fdfc3deede9",
        "name": "InicioString",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Esto es una prueba",
        "payloadType": "str",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "a11bda01caa63ad9"
            ]
        ]
    },
    {
        "id": "a11bda01caa63ad9",
        "type": "template",
        "z": "2de32fdfc3deede9",
        "name": "PlantillaString",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "This is the payload: {{payload}} !",
        "output": "str",
        "x": 460,
        "y": 200,
        "wires": [
            [
                "f2f1f71349c1cb53"
            ]
        ]
    },
    {
        "id": "f2f1f71349c1cb53",
        "type": "debug",
        "z": "2de32fdfc3deede9",
        "name": "SalidaString",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 200,
        "wires": []
    },
    {
        "id": "85e1b203c2d14bb3",
        "type": "comment",
        "z": "2de32fdfc3deede9",
        "name": "Nota",
        "info": "Referencia: https://nodered.org/docs/user-guide/nodes\n\nEjemplo de uso de nodo principales.",
        "x": 130,
        "y": 80,
        "wires": []
    },
    {
        "id": "9253661438325266",
        "type": "switch",
        "z": "2de32fdfc3deede9",
        "name": "Switch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 380,
        "wires": [
            [
                "268e8e1de49699a4"
            ],
            [
                "bbdec075bfe856b3"
            ]
        ]
    },
    {
        "id": "9587c4af3ac6a8f4",
        "type": "debug",
        "z": "2de32fdfc3deede9",
        "name": "Salida1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 300,
        "wires": []
    },
    {
        "id": "ba02459ed4c2a0cf",
        "type": "debug",
        "z": "2de32fdfc3deede9",
        "name": "Salida2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 460,
        "wires": []
    },
    {
        "id": "90991cb023723adf",
        "type": "inject",
        "z": "2de32fdfc3deede9",
        "name": "InicioSwith",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 160,
        "y": 380,
        "wires": [
            [
                "9253661438325266"
            ]
        ]
    },
    {
        "id": "268e8e1de49699a4",
        "type": "template",
        "z": "2de32fdfc3deede9",
        "name": "PlantillaSalida1",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Salida 1: {{payload}} ",
        "output": "str",
        "x": 580,
        "y": 300,
        "wires": [
            [
                "9587c4af3ac6a8f4"
            ]
        ]
    },
    {
        "id": "202b54503d7bc4bf",
        "type": "template",
        "z": "2de32fdfc3deede9",
        "name": "PlantillaSalida2",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Salida2: {{payload}} !",
        "output": "str",
        "x": 820,
        "y": 460,
        "wires": [
            [
                "ba02459ed4c2a0cf"
            ]
        ]
    },
    {
        "id": "bbdec075bfe856b3",
        "type": "change",
        "z": "2de32fdfc3deede9",
        "name": "Suma10",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "msg.payload + 10",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 460,
        "wires": [
            [
                "202b54503d7bc4bf"
            ]
        ]
    },
    {
        "id": "ea9216fafb0e6cbf",
        "type": "inject",
        "z": "e47078fd8feec00c",
        "name": "Inicio1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hola mundo",
        "payloadType": "str",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "4dda5af0c918b939"
            ]
        ]
    },
    {
        "id": "4dda5af0c918b939",
        "type": "function",
        "z": "e47078fd8feec00c",
        "name": "Funcion1",
        "func": "\nvar xyz = \"abc\"\n\n// Mensaje que sale en la consola UI del Node-RED.\nnode.warn(\"my var xyz = \" + xyz);\n\nvar newMsg = { payload: msg.payload.length}\n\n// Mensaje que sale en la consola\nnode.log(\"Mensaje info que sale en la consola\");\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 200,
        "wires": [
            [
                "bc5ff32c59a53fa4"
            ]
        ]
    },
    {
        "id": "bc5ff32c59a53fa4",
        "type": "debug",
        "z": "e47078fd8feec00c",
        "name": "SalidaFuncion1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 200,
        "wires": []
    },
    {
        "id": "b2608e2e9890f249",
        "type": "inject",
        "z": "e47078fd8feec00c",
        "name": "Inicio2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "fresa",
        "payload": "Frutas",
        "payloadType": "str",
        "x": 190,
        "y": 320,
        "wires": [
            [
                "2c3eda036d67bca2"
            ]
        ]
    },
    {
        "id": "2c3eda036d67bca2",
        "type": "function",
        "z": "e47078fd8feec00c",
        "name": "Funcion2",
        "func": "var resultado = []\n\nif (msg.topic === \"platano\") {\n    node.warn(\"Platano\");\n    resultado = [msg, null];\n\n} else {\n    node.warn(\"Otro\");\n    resultado = [null, msg];\n    \n}\n\nreturn resultado;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 320,
        "wires": [
            [
                "2ea113e960bd6331"
            ],
            [
                "3308f53c3c6c0783"
            ]
        ]
    },
    {
        "id": "61315309ae67380a",
        "type": "debug",
        "z": "e47078fd8feec00c",
        "name": "SalidaFuncion2_1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 300,
        "wires": []
    },
    {
        "id": "28843f6d492ff694",
        "type": "debug",
        "z": "e47078fd8feec00c",
        "name": "SalidaFuncion2_2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 360,
        "wires": []
    },
    {
        "id": "2ea113e960bd6331",
        "type": "template",
        "z": "e47078fd8feec00c",
        "name": "TemplateSalida1",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Salida 1: {{payload}} ",
        "output": "str",
        "x": 760,
        "y": 300,
        "wires": [
            [
                "61315309ae67380a"
            ]
        ]
    },
    {
        "id": "3308f53c3c6c0783",
        "type": "template",
        "z": "e47078fd8feec00c",
        "name": "TemplateSalida2",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Salida 2: {{payload}} !",
        "output": "str",
        "x": 760,
        "y": 360,
        "wires": [
            [
                "28843f6d492ff694"
            ]
        ]
    },
    {
        "id": "fe318cdcb14b69c1",
        "type": "inject",
        "z": "e47078fd8feec00c",
        "name": "Inicio3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 520,
        "wires": [
            [
                "be1a849e44887316"
            ]
        ]
    },
    {
        "id": "be1a849e44887316",
        "type": "function",
        "z": "e47078fd8feec00c",
        "name": "Funcion3SalidaMultiple",
        "func": "\nvar msg1 = { payload: \"Salida 1\"};\n\nvar msg2 = { payload: \"Salida 2\" };\n\nvar msg3 = { payload: \"Salida 3\" };\n\nvar msg4 = { payload: \"Salida 4\" };\n\nreturn [ [ msg1, msg2, msg3 ], msg4] ;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 520,
        "wires": [
            [
                "98d819082a46725e"
            ],
            [
                "51024392c09f1120"
            ]
        ]
    },
    {
        "id": "ad600be60a2453b4",
        "type": "debug",
        "z": "e47078fd8feec00c",
        "name": "SalidaFuncion3_1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 480,
        "wires": []
    },
    {
        "id": "361b8ddc0cb7a73b",
        "type": "comment",
        "z": "e47078fd8feec00c",
        "name": "Referencia: https://nodered.org/docs/user-guide/writing-functions",
        "info": "Ejemplos de uso de funciones",
        "x": 360,
        "y": 80,
        "wires": []
    },
    {
        "id": "98d819082a46725e",
        "type": "template",
        "z": "e47078fd8feec00c",
        "name": "TemplateFuncion3_1",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Salida 1: {{payload}} ",
        "output": "str",
        "x": 780,
        "y": 480,
        "wires": [
            [
                "ad600be60a2453b4"
            ]
        ]
    },
    {
        "id": "51024392c09f1120",
        "type": "template",
        "z": "e47078fd8feec00c",
        "name": "TemplateFuncion3_2",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Salida: {{payload}}",
        "output": "str",
        "x": 780,
        "y": 560,
        "wires": [
            [
                "9fd8dc1a2ebde6bb"
            ]
        ]
    },
    {
        "id": "9fd8dc1a2ebde6bb",
        "type": "debug",
        "z": "e47078fd8feec00c",
        "name": "SalidaFuncion3_2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 560,
        "wires": []
    },
    {
        "id": "c4d48bd197065097",
        "type": "inject",
        "z": "e47078fd8feec00c",
        "name": "Inicio4",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hola mundo 4",
        "payloadType": "str",
        "x": 190,
        "y": 680,
        "wires": [
            [
                "ce3dd500e74addac"
            ]
        ]
    },
    {
        "id": "ce3dd500e74addac",
        "type": "function",
        "z": "e47078fd8feec00c",
        "name": "Funcion4",
        "func": "var outputMsgs = [];\n\nvar words = msg.payload.split(\" \");\n\nfor(var w in words){\n    outputMsgs.push({payload: words[w]});\n\n}\n\nreturn [ outputMsgs ];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 680,
        "wires": [
            [
                "db680bfff270ce9a"
            ]
        ]
    },
    {
        "id": "6db14fe4e3c5ee8d",
        "type": "debug",
        "z": "e47078fd8feec00c",
        "name": "SalidaFuncion4_1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 680,
        "wires": []
    },
    {
        "id": "db680bfff270ce9a",
        "type": "template",
        "z": "e47078fd8feec00c",
        "name": "TemplateFuncion4_1",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Salida 1: {{payload}} ",
        "output": "str",
        "x": 780,
        "y": 680,
        "wires": [
            [
                "6db14fe4e3c5ee8d"
            ]
        ]
    },
    {
        "id": "6a305a57806b09b8",
        "type": "inject",
        "z": "e47078fd8feec00c",
        "name": "Inicio5",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hola mundo 4",
        "payloadType": "str",
        "x": 190,
        "y": 820,
        "wires": [
            [
                "743b73582fdc413e"
            ]
        ]
    },
    {
        "id": "743b73582fdc413e",
        "type": "function",
        "z": "e47078fd8feec00c",
        "name": "Funcion5",
        "func": "var outputMsgs = [];\n\nvar counterContext = context.get(\"counter\");\nnode.warn(\"Counter=\" + counterContext);\n\n\nnode.error(\"Mensaje de error de prueba:\", counterContext);\n\nvar words = msg.payload.split(\" \");\n\nfor(var w in words){\n    outputMsgs.push({payload: words[w]});\n\n}\n\n// Variable global que se usará en el flujo 6\nglobal.set(\"varGlobal\", 321);\n\nreturn [ outputMsgs ];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nif(context.get(\"counter\") === undefined ){\n    context.set(\"counter\", 69)\n}",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 820,
        "wires": [
            [
                "4376e4a6aa7cbe35"
            ]
        ]
    },
    {
        "id": "e483f65f28a8747b",
        "type": "debug",
        "z": "e47078fd8feec00c",
        "name": "SalidaFuncion5_1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 820,
        "wires": []
    },
    {
        "id": "4376e4a6aa7cbe35",
        "type": "template",
        "z": "e47078fd8feec00c",
        "name": "TemplateFuncion5_1",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Salida 1: {{payload}} ",
        "output": "str",
        "x": 780,
        "y": 820,
        "wires": [
            [
                "e483f65f28a8747b"
            ]
        ]
    },
    {
        "id": "db48a7376cdc4314",
        "type": "inject",
        "z": "e47078fd8feec00c",
        "name": "Inicio6",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "hola mundo 4",
        "payloadType": "str",
        "x": 190,
        "y": 960,
        "wires": [
            [
                "a7d0897c29034068"
            ]
        ]
    },
    {
        "id": "a7d0897c29034068",
        "type": "function",
        "z": "e47078fd8feec00c",
        "name": "Funcion6_1",
        "func": "var outputMsgs = [];\n\n// Asignación de un variable.\nflow.set(\"VarFlow\", 123);\n\n// Asignación de tres valores múltiples.\nvar values = flow.set([\"var1\", \"var2\", \"var3\"], [123, \"color\", \"otro\"]);\n\nvar counterContext = context.get(\"counter\");\nnode.warn(\"Counter=\" + counterContext);\n\n\nnode.error(\"Mensaje de error de prueba:\", counterContext);\n\nvar words = msg.payload.split(\" \");\n\nfor(var w in words){\n    outputMsgs.push({payload: words[w]});\n\n}\n\nreturn [ outputMsgs ];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nif(context.get(\"counter\") === undefined ){\n    context.set(\"counter\", 69)\n}",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 960,
        "wires": [
            [
                "108cd7b7989e5f1b"
            ]
        ]
    },
    {
        "id": "5ecd5f519572485f",
        "type": "debug",
        "z": "e47078fd8feec00c",
        "name": "SalidaFuncion6_1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 960,
        "wires": []
    },
    {
        "id": "03d0269519de6b3f",
        "type": "template",
        "z": "e47078fd8feec00c",
        "name": "TemplateFuncion6_1",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\nSalida 1: {{payload}} - {varFLow}",
        "output": "str",
        "x": 780,
        "y": 960,
        "wires": [
            [
                "5ecd5f519572485f"
            ]
        ]
    },
    {
        "id": "108cd7b7989e5f1b",
        "type": "function",
        "z": "e47078fd8feec00c",
        "name": "Funcion6_2",
        "func": "var varFlow = flow.get(\"VarFlow\");\nnode.warn(\"Var Flow==>>\" + varFlow);\n\nvar values = flow.get([\"var1\", \"var2\", \"var3\"]);\nnode.warn(\"Var[0]=\" + values[0]);\nnode.warn(\"Var[1]=\" + values[1]);\nnode.warn(\"Var[2]=\" + values[2]);\n\n// Variable global que se define en el flujo 5.\nvar varGlobal = global.get(\"varGlobal\");\nnode.warn(\"Var Global==>>\" + varGlobal);\n\nreturn ;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 960,
        "wires": [
            [
                "03d0269519de6b3f"
            ]
        ]
    },
    {
        "id": "d8845fb2ba14b954",
        "type": "comment",
        "z": "e47078fd8feec00c",
        "name": "6.- Ejemplo de uso de variables de contexto",
        "info": "",
        "x": 290,
        "y": 920,
        "wires": []
    },
    {
        "id": "bd18d976f4033edf",
        "type": "comment",
        "z": "e47078fd8feec00c",
        "name": "3.- Flujo con función de salida múltiple.",
        "info": "",
        "x": 270,
        "y": 480,
        "wires": []
    },
    {
        "id": "6bfbc37b282c0904",
        "type": "comment",
        "z": "e47078fd8feec00c",
        "name": "4.- Función con ejemplo de uso de bucles.",
        "info": "",
        "x": 280,
        "y": 640,
        "wires": []
    },
    {
        "id": "3c57918b06a68dd2",
        "type": "comment",
        "z": "e47078fd8feec00c",
        "name": "5.- Ejemplo de variables de contexto y trazas.",
        "info": "",
        "x": 290,
        "y": 780,
        "wires": []
    },
    {
        "id": "f743cbe2eacd2573",
        "type": "comment",
        "z": "e47078fd8feec00c",
        "name": "2.- Ejemplo de sentencias condicionales",
        "info": "",
        "x": 280,
        "y": 280,
        "wires": []
    },
    {
        "id": "74b8499585db986b",
        "type": "comment",
        "z": "e47078fd8feec00c",
        "name": "1.- Ejemplo de uso de función",
        "info": "",
        "x": 240,
        "y": 160,
        "wires": []
    },
    {
        "id": "e29e98919c69405b",
        "type": "comment",
        "z": "13a968db28f44d59",
        "name": "Referencia: https://nodered.org/docs/user-guide/messages",
        "info": "",
        "x": 250,
        "y": 40,
        "wires": []
    },
    {
        "id": "e55471a133b23093",
        "type": "inject",
        "z": "13a968db28f44d59",
        "name": "Inicio1_JSON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"_msgid\":\"12345\",\"payload\":\"Contenido Pay Load\"}",
        "payloadType": "json",
        "x": 150,
        "y": 380,
        "wires": [
            [
                "bd4670bde200ab40"
            ]
        ]
    },
    {
        "id": "bd4670bde200ab40",
        "type": "debug",
        "z": "13a968db28f44d59",
        "name": "Debug_Inicio1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 260,
        "wires": []
    },
    {
        "id": "e5f2131ee47a77c8",
        "type": "inject",
        "z": "13a968db28f44d59",
        "name": "Inicio1_Boolean",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "bd4670bde200ab40"
            ]
        ]
    },
    {
        "id": "22fb95d4eed6dbb1",
        "type": "inject",
        "z": "13a968db28f44d59",
        "name": "Inicio1_Number",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "num",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "bd4670bde200ab40"
            ]
        ]
    },
    {
        "id": "47ac260ea47f482d",
        "type": "inject",
        "z": "13a968db28f44d59",
        "name": "Inicio1_String",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "HolaMundo",
        "payloadType": "str",
        "x": 150,
        "y": 260,
        "wires": [
            [
                "bd4670bde200ab40"
            ]
        ]
    },
    {
        "id": "ebdc445719b41cbc",
        "type": "inject",
        "z": "13a968db28f44d59",
        "name": "Inicio1_Array",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[1, 2, 3, 4]",
        "payloadType": "bin",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "bd4670bde200ab40"
            ]
        ]
    },
    {
        "id": "a0146b5cf295aa8e",
        "type": "comment",
        "z": "13a968db28f44d59",
        "name": "1.- Ejemplo de tipos",
        "info": "",
        "x": 150,
        "y": 100,
        "wires": []
    },
    {
        "id": "04e08bde8b922ee4",
        "type": "comment",
        "z": "13a968db28f44d59",
        "name": "2.- Cambio de mensajes",
        "info": "",
        "x": 170,
        "y": 460,
        "wires": []
    },
    {
        "id": "7f9c7561fc63d40c",
        "type": "inject",
        "z": "13a968db28f44d59",
        "name": "Inicio2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"name\":\"NombreTest\",\"apellidos\":\"Apellido1 Apellido2\",\"otros\":{\"codigo1\":12,\"codigo2\":true,\"copigo3\":[1,2,3,4]}}",
        "payloadType": "json",
        "x": 110,
        "y": 520,
        "wires": [
            [
                "2ee3545ebd7462f4"
            ]
        ]
    },
    {
        "id": "bffbeb49dd9a6e9d",
        "type": "debug",
        "z": "13a968db28f44d59",
        "name": "Debug_Inicio2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 520,
        "wires": []
    },
    {
        "id": "2ee3545ebd7462f4",
        "type": "change",
        "z": "13a968db28f44d59",
        "name": "Cambio2",
        "rules": [
            {
                "t": "set",
                "p": "payload.Nuevo",
                "pt": "msg",
                "to": "NuevaPropiedad",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.NuevoCalculo",
                "pt": "msg",
                "to": "(payload.otros.codigo1*5)/3",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 520,
        "wires": [
            [
                "bffbeb49dd9a6e9d"
            ]
        ]
    },
    {
        "id": "1082567908dcff1e",
        "type": "template",
        "z": "13a968db28f44d59",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Nombre,Apellido,Factor\nXNombre1,Apelido1,10\nYNombre2,Apelido2,20\nFNombre3,Apelido3,30\nNombre4,Apelido4,40\nANombre5,Apelido5,50",
        "output": "str",
        "x": 340,
        "y": 660,
        "wires": [
            [
                "283c06bb0abdf61e"
            ]
        ]
    },
    {
        "id": "3dddbd82a45886d9",
        "type": "comment",
        "z": "13a968db28f44d59",
        "name": "3.- Seceuncia de Mensajes",
        "info": "",
        "x": 170,
        "y": 600,
        "wires": []
    },
    {
        "id": "02f1448ac9c99595",
        "type": "debug",
        "z": "13a968db28f44d59",
        "name": "Debug_Inicio3_1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 660,
        "wires": []
    },
    {
        "id": "9b21b40ff5c33008",
        "type": "inject",
        "z": "13a968db28f44d59",
        "name": "Inicio3",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 660,
        "wires": [
            [
                "1082567908dcff1e"
            ]
        ]
    },
    {
        "id": "283c06bb0abdf61e",
        "type": "csv",
        "z": "13a968db28f44d59",
        "name": "ParseoCSV",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 530,
        "y": 660,
        "wires": [
            [
                "02f1448ac9c99595",
                "69b17e9eb2b7a4ba",
                "7f2ddcd5c13316e7",
                "26d91954e61d44d2",
                "de274b947df9e97a",
                "c8ac858b82dafdc5",
                "0b6a8bcbc0e3da56"
            ]
        ]
    },
    {
        "id": "69b17e9eb2b7a4ba",
        "type": "split",
        "z": "13a968db28f44d59",
        "name": "Split_Fila_CSV",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 760,
        "y": 740,
        "wires": [
            [
                "f38b24d0b3f73f67"
            ]
        ]
    },
    {
        "id": "f38b24d0b3f73f67",
        "type": "debug",
        "z": "13a968db28f44d59",
        "name": "Debug_Inicio3_2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 740,
        "wires": []
    },
    {
        "id": "7f2ddcd5c13316e7",
        "type": "function",
        "z": "13a968db28f44d59",
        "name": "AñadirColumnaFactorSuma1",
        "func": "var FACTOR_SUMA = {\n    \"Nombre1\": 10,\n    \"Nombre2\": 20,\n    \"Nombre3\": 30,\n    \"Nombre4\": 40,\n    \"Nombre5\": 50\n}\n\nmsg.payload.FactorSuma = msg.payload.Factor * FACTOR_SUMA[msg.payload.Nombre];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 820,
        "wires": [
            [
                "1c8fb0111b15bc93"
            ]
        ]
    },
    {
        "id": "1c8fb0111b15bc93",
        "type": "debug",
        "z": "13a968db28f44d59",
        "name": "Debug_Inicio3_3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 820,
        "wires": []
    },
    {
        "id": "26d91954e61d44d2",
        "type": "function",
        "z": "13a968db28f44d59",
        "name": "AñadirColumnaFactorSuma2",
        "func": "var FACTOR_SUMA = {\n    \"Nombre1\": 10,\n    \"Nombre2\": 20,\n    \"Nombre3\": 30,\n    \"Nombre4\": 40,\n    \"Nombre5\": 50\n}\n\nmsg.payload.FactorSuma = msg.payload.Factor * FACTOR_SUMA[msg.payload.Nombre];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 920,
        "wires": [
            [
                "333b87ff132dacea"
            ]
        ]
    },
    {
        "id": "6a0878fd4899e86b",
        "type": "debug",
        "z": "13a968db28f44d59",
        "name": "Debug_Inicio3_4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 920,
        "wires": []
    },
    {
        "id": "333b87ff132dacea",
        "type": "join",
        "z": "13a968db28f44d59",
        "name": "JuntaFilasCSV",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1060,
        "y": 920,
        "wires": [
            [
                "6a0878fd4899e86b"
            ]
        ]
    },
    {
        "id": "4d564c58b4413c24",
        "type": "comment",
        "z": "13a968db28f44d59",
        "name": "Salida como JSON",
        "info": "",
        "x": 770,
        "y": 880,
        "wires": []
    },
    {
        "id": "de274b947df9e97a",
        "type": "function",
        "z": "13a968db28f44d59",
        "name": "AñadirColumnaFactorSuma3",
        "func": "var FACTOR_SUMA = {\n    \"Nombre1\": 10,\n    \"Nombre2\": 20,\n    \"Nombre3\": 30,\n    \"Nombre4\": 40,\n    \"Nombre5\": 50\n}\n\nmsg.payload.FactorSuma = msg.payload.Factor * FACTOR_SUMA[msg.payload.Nombre];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1020,
        "wires": [
            [
                "2ba5de999bb021f5"
            ]
        ]
    },
    {
        "id": "fe5e4681708f1da4",
        "type": "debug",
        "z": "13a968db28f44d59",
        "name": "Debug_Inicio3_5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 1020,
        "wires": []
    },
    {
        "id": "2ba5de999bb021f5",
        "type": "join",
        "z": "13a968db28f44d59",
        "name": "JuntaFilasCSV",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1060,
        "y": 1020,
        "wires": [
            [
                "258de18b1377cbbb"
            ]
        ]
    },
    {
        "id": "258de18b1377cbbb",
        "type": "csv",
        "z": "13a968db28f44d59",
        "name": "To_CSV",
        "sep": ",",
        "hdrin": true,
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "Nombre, Apellido, Factor, FactorSuma",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1260,
        "y": 1020,
        "wires": [
            [
                "fe5e4681708f1da4"
            ]
        ]
    },
    {
        "id": "23ec6b975e2b38e1",
        "type": "comment",
        "z": "13a968db28f44d59",
        "name": "Salida a CSV",
        "info": "",
        "x": 750,
        "y": 980,
        "wires": []
    },
    {
        "id": "c8ac858b82dafdc5",
        "type": "function",
        "z": "13a968db28f44d59",
        "name": "AñadirColumnaFactorSuma3",
        "func": "var FACTOR_SUMA = {\n    \"Nombre1\": 10,\n    \"Nombre2\": 20,\n    \"Nombre3\": 30,\n    \"Nombre4\": 40,\n    \"Nombre5\": 50\n}\n\nmsg.payload.FactorSuma = msg.payload.Factor * FACTOR_SUMA[msg.payload.Nombre];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1120,
        "wires": [
            [
                "8c1e21879037847d"
            ]
        ]
    },
    {
        "id": "7224e971106f8f87",
        "type": "debug",
        "z": "13a968db28f44d59",
        "name": "Debug_Inicio3_6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 1120,
        "wires": []
    },
    {
        "id": "8c1e21879037847d",
        "type": "join",
        "z": "13a968db28f44d59",
        "name": "JuntaFilasCSV",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1060,
        "y": 1120,
        "wires": [
            [
                "102e207078e21975"
            ]
        ]
    },
    {
        "id": "102e207078e21975",
        "type": "csv",
        "z": "13a968db28f44d59",
        "name": "To_CSV",
        "sep": ",",
        "hdrin": true,
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "Nombre, Apellido, Factor, FactorSuma",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1260,
        "y": 1120,
        "wires": [
            [
                "7224e971106f8f87",
                "a89db24470bd681d"
            ]
        ]
    },
    {
        "id": "7c9027b74176016b",
        "type": "comment",
        "z": "13a968db28f44d59",
        "name": "Salida a fichero",
        "info": "",
        "x": 760,
        "y": 1080,
        "wires": []
    },
    {
        "id": "a89db24470bd681d",
        "type": "file",
        "z": "13a968db28f44d59",
        "name": "FicheroSalida",
        "filename": "/usr/src/node-red/ejemplo.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1440,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "4a2ab5db6628fa48",
        "type": "comment",
        "z": "13a968db28f44d59",
        "name": "Lo graba en el contenedor en /usr/src/node-red",
        "info": "",
        "x": 1740,
        "y": 1180,
        "wires": []
    },
    {
        "id": "0b6a8bcbc0e3da56",
        "type": "function",
        "z": "13a968db28f44d59",
        "name": "AñadirColumnaFactorSuma3",
        "func": "var FACTOR_SUMA = {\n    \"Nombre1\": 10,\n    \"Nombre2\": 20,\n    \"Nombre3\": 30,\n    \"Nombre4\": 40,\n    \"Nombre5\": 50\n}\n\nmsg.payload.FactorSuma = msg.payload.Factor * FACTOR_SUMA[msg.payload.Nombre];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1280,
        "wires": [
            [
                "50f2953743ca202d"
            ]
        ]
    },
    {
        "id": "943d9ac295e1ae0d",
        "type": "debug",
        "z": "13a968db28f44d59",
        "name": "Debug_Inicio3_7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1710,
        "y": 1280,
        "wires": []
    },
    {
        "id": "63d94f77f9100fb8",
        "type": "join",
        "z": "13a968db28f44d59",
        "name": "JuntaFilasCSV",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1300,
        "y": 1280,
        "wires": [
            [
                "3914e1af0553fac0"
            ]
        ]
    },
    {
        "id": "3914e1af0553fac0",
        "type": "csv",
        "z": "13a968db28f44d59",
        "name": "To_CSV",
        "sep": ",",
        "hdrin": true,
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "Nombre, Apellido, Factor, FactorSuma",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1500,
        "y": 1280,
        "wires": [
            [
                "943d9ac295e1ae0d"
            ]
        ]
    },
    {
        "id": "891e42abb22b250f",
        "type": "comment",
        "z": "13a968db28f44d59",
        "name": "Salida a CSV con filas ordenadas",
        "info": "",
        "x": 810,
        "y": 1240,
        "wires": []
    },
    {
        "id": "50f2953743ca202d",
        "type": "sort",
        "z": "13a968db28f44d59",
        "name": "OdenacionPorNombreNoFunciona",
        "order": "ascending",
        "as_num": false,
        "target": "payload.Nombre",
        "targetType": "msg",
        "msgKey": "payload",
        "msgKeyType": "elem",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 1060,
        "y": 1340,
        "wires": [
            [
                "63d94f77f9100fb8"
            ]
        ]
    },
    {
        "id": "6f817611ed2b5c38",
        "type": "comment",
        "z": "0866e63f3966cd60",
        "name": "Referencia: https://nodered.org/docs/user-guide/handling-errors",
        "info": "",
        "x": 270,
        "y": 60,
        "wires": []
    },
    {
        "id": "b1aee340d15b48f2",
        "type": "inject",
        "z": "0866e63f3966cd60",
        "name": "Inicio1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Error",
        "payloadType": "str",
        "x": 190,
        "y": 180,
        "wires": [
            [
                "b2c2c2b35255907b"
            ]
        ]
    },
    {
        "id": "b2c2c2b35255907b",
        "type": "function",
        "z": "0866e63f3966cd60",
        "name": "Funcion1",
        "func": "\nnode.warn(\"Inicio\");\n\nif (msg.payload === \"Error\"){\n    node.warn(\"Lanzamos exception\");\n    throw \"Error de prueba\";\n}\n\n\nnode.warn(\"Fin\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 180,
        "wires": [
            [
                "1c21d6216734c71c"
            ]
        ]
    },
    {
        "id": "1c21d6216734c71c",
        "type": "debug",
        "z": "0866e63f3966cd60",
        "name": "Debug1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 180,
        "wires": []
    },
    {
        "id": "8871793ef23592d0",
        "type": "catch",
        "z": "0866e63f3966cd60",
        "name": "CatchFuncion1",
        "scope": [
            "b2c2c2b35255907b"
        ],
        "uncaught": false,
        "x": 240,
        "y": 280,
        "wires": [
            [
                "67ee9bed05b9759e"
            ]
        ]
    },
    {
        "id": "67ee9bed05b9759e",
        "type": "function",
        "z": "0866e63f3966cd60",
        "name": "FuncionCatchErrorFuncion1",
        "func": "\nnode.warn(\"msg.topic=\" + msg.topic);\nnode.warn(\"msg.payload=\" + msg.payload);\nnode.warn(\"msg.error=\" + msg.error);\nnode.warn(\"msg.error.message=\" + msg.error.message);\nnode.warn(\"msg.error.source.name=\" + msg.error.source.name);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 280,
        "wires": [
            [
                "f05fa04ccf18189f"
            ]
        ]
    },
    {
        "id": "f05fa04ccf18189f",
        "type": "debug",
        "z": "0866e63f3966cd60",
        "name": "CatchErrorFuncion1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 280,
        "wires": []
    },
    {
        "id": "462219d703fee268",
        "type": "catch",
        "z": "0866e63f3966cd60",
        "name": "CatchAll",
        "scope": null,
        "uncaught": false,
        "x": 220,
        "y": 360,
        "wires": [
            [
                "3535bf19a0464308"
            ]
        ]
    },
    {
        "id": "3535bf19a0464308",
        "type": "function",
        "z": "0866e63f3966cd60",
        "name": "FuncionCatchErrorAll",
        "func": "\nnode.warn(\"Catch para todos los nodos\");\nnode.error(\"Error en All\", msg);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 360,
        "wires": [
            [
                "22c9981419befe2c"
            ]
        ]
    },
    {
        "id": "22c9981419befe2c",
        "type": "debug",
        "z": "0866e63f3966cd60",
        "name": "CatchErrorAll",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 360,
        "wires": []
    },
    {
        "id": "140121830f3a2f4e",
        "type": "comment",
        "z": "0866e63f3966cd60",
        "name": "1.- Ejemplo de manejo de errores. Throw/Catch",
        "info": "",
        "x": 300,
        "y": 120,
        "wires": []
    },
    {
        "id": "659f0462934030f8",
        "type": "inject",
        "z": "72fabedfb7dbb86e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "NodeRed",
        "payloadType": "str",
        "x": 300,
        "y": 220,
        "wires": [
            [
                "1f6a8dd9acce19d4"
            ]
        ]
    },
    {
        "id": "1f6a8dd9acce19d4",
        "type": "mqtt out",
        "z": "72fabedfb7dbb86e",
        "name": "BrokerMosquitto",
        "topic": "casa/habitaciones/hab1/luz",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c8b203d85105f0cf",
        "x": 610,
        "y": 220,
        "wires": []
    },
    {
        "id": "5cbf3e9594a2a25a",
        "type": "mqtt in",
        "z": "72fabedfb7dbb86e",
        "name": "",
        "topic": "casa/habitaciones/hab1/luz",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c8b203d85105f0cf",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 340,
        "y": 360,
        "wires": [
            [
                "706dd9e2fc5dc9e8"
            ]
        ]
    },
    {
        "id": "706dd9e2fc5dc9e8",
        "type": "debug",
        "z": "72fabedfb7dbb86e",
        "name": "TopicMosquitto",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 360,
        "wires": []
    },
    {
        "id": "5cb3c74b9e0363b6",
        "type": "comment",
        "z": "72fabedfb7dbb86e",
        "name": "Escritura en Topic",
        "info": "Envío de un mensaje a un topic de Mosquitto.",
        "x": 310,
        "y": 160,
        "wires": []
    },
    {
        "id": "47d0f632865d3a6f",
        "type": "comment",
        "z": "72fabedfb7dbb86e",
        "name": "Lectura de Topic",
        "info": "Lectura de un mensaje de un topic de Mosquitto.",
        "x": 300,
        "y": 300,
        "wires": []
    },
    {
        "id": "5aabf444e6d5a827",
        "type": "mqtt in",
        "z": "32fa710f8ce72da8",
        "name": "",
        "topic": "esp32/binomio1/oxigeno",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c8b203d85105f0cf",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 200,
        "wires": [
            [
                "43d12d9c539d0cf3"
            ]
        ]
    },
    {
        "id": "17673061bbef68f8",
        "type": "comment",
        "z": "32fa710f8ce72da8",
        "name": "Binomio1 Bombero1 Oxígeno",
        "info": "Flujo de operaciones del binomio 1 para oxígeno.",
        "x": 240,
        "y": 120,
        "wires": []
    },
    {
        "id": "57a43a4f01ec4c17",
        "type": "mqtt out",
        "z": "32fa710f8ce72da8",
        "name": "BrokerMosquitto",
        "topic": "bridge/binomio1/accion1",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c8b203d85105f0cf",
        "x": 540,
        "y": 700,
        "wires": []
    },
    {
        "id": "f69e0f744f083efa",
        "type": "inject",
        "z": "32fa710f8ce72da8",
        "name": "NodeRed",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "NodeRed-Test",
        "payloadType": "str",
        "x": 200,
        "y": 700,
        "wires": [
            [
                "57a43a4f01ec4c17"
            ]
        ]
    },
    {
        "id": "dd8f425e0807e9fb",
        "type": "influxdb out",
        "z": "32fa710f8ce72da8",
        "influxdb": "0bcf57a68d6eff7b",
        "name": "InfluxDB-Docker-Node",
        "measurement": "binomio1",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "s",
        "retentionPolicyV18Flux": "",
        "org": "org-tfm",
        "bucket": "bucket-tfm",
        "x": 900,
        "y": 200,
        "wires": []
    },
    {
        "id": "43d12d9c539d0cf3",
        "type": "change",
        "z": "32fa710f8ce72da8",
        "name": "Binomio1-Bombero1-Oxigeno",
        "rules": [
            {
                "t": "set",
                "p": "fields.oxigeno",
                "pt": "msg",
                "to": "$number(msg.payload)",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "tags.bombero1",
                "pt": "msg",
                "to": "Pablo",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(fields, tags)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 200,
        "wires": [
            [
                "c6065e70938e7804",
                "dd8f425e0807e9fb"
            ]
        ]
    },
    {
        "id": "c6065e70938e7804",
        "type": "debug",
        "z": "32fa710f8ce72da8",
        "name": "TestChange",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 120,
        "wires": []
    },
    {
        "id": "35b62fed19fd5a94",
        "type": "mqtt in",
        "z": "32fa710f8ce72da8",
        "name": "",
        "topic": "app/binomio1/alarm1",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c8b203d85105f0cf",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 400,
        "wires": [
            [
                "4af52783de998006"
            ]
        ]
    },
    {
        "id": "4af52783de998006",
        "type": "debug",
        "z": "32fa710f8ce72da8",
        "name": "Test_Alarm1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 400,
        "wires": []
    },
    {
        "id": "ddfb0c033952a7d6",
        "type": "comment",
        "z": "32fa710f8ce72da8",
        "name": "App Binomio1 (Alarm1, Alarm2)",
        "info": "Flujo para el envío de una alarma1 al controlador \ndel binomio1",
        "x": 250,
        "y": 320,
        "wires": []
    },
    {
        "id": "7344ebaf33b44248",
        "type": "mqtt in",
        "z": "32fa710f8ce72da8",
        "name": "",
        "topic": "app/binomio1/alarm2",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c8b203d85105f0cf",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 500,
        "wires": [
            [
                "daf178294969f807"
            ]
        ]
    },
    {
        "id": "daf178294969f807",
        "type": "debug",
        "z": "32fa710f8ce72da8",
        "name": "Test_Alarm2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 500,
        "wires": []
    }
]