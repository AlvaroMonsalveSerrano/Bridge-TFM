################################################################################
# Node-RED Stack or Compose
################################################################################
# docker stack deploy node-red --compose-file docker-compose-node-red.yml
# docker-compose -f docker-compose-node-red.yml -p myNoderedProject up
################################################################################
version: "3.7"

services:
  nodered:
    container_name: nodered
    image: nodered/node-red:latest
    environment:
      - TZ=Europe/Madrid
    ports:
      - "1881:1880"
    networks:
      - edge-net
    volumes:
      - $PWD/infra/nodered2_data:/data

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:latest
    environment:
      - TZ=Europe/Madrid
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - edge-net
    volumes:
      - $PWD/infra/Mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - $PWD/infra/Mosquitto/data:/mosquitto/data
      - $PWD/infra/Mosquitto/log:/mosquitto/log

#
# Configuraci√≥n de InfluxDB.
#
# influx setup --name myinfluxdb2 --host http://localhost:8086 \
#  -u admin -p admin54321 -o my-org \
#  -b my-bucket -t my-token -r 0 -f
#
  influxDB:
    container_name: influxDB
    image: influxdb:2.6
    environment:
      - TZ=Europe/Madrid
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=root
      - DOCKER_INFLUXDB_INIT_PASSWORD=secret-password
      - DOCKER_INFLUXDB_INIT_ORG=org-tfm
      - DOCKER_INFLUXDB_INIT_BUCKET=bucket-tfm
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=6_nXNZk2yq1wvz45j6XM5J75X25OXRXW68QgIOCG7-QgFqwc5MJLRwUHPriHfh4_kggcZdvbCGfzBiFV2kEnFQ==



    ports:
      - "8086:8086"
    networks:
      - edge-net
    volumes:
      - $PWD/infra/influxdb/data:/var/lib/influxdb2
      - $PWD/infra/influxdb/config:/etc/influxdb2      

  grafanaui:
    container_name: grafanaui
    image: grafana/grafana-enterprise
    restart: unless-stopped
    ports:
      - "3000:3000"

    networks:
      - edge-net
      - platformiot

    volumes:
      - $PWD/infra/grafana/data:/var/lib/grafana

    user: "0"  

  app:
    container_name: app 
    image: alvaroms/tfm:v1.0
    ports:
      - "6060:80"

    networks:
      - edge-net
      - platformiot

volumes:
  edge-data:

networks:
  edge-net:
  platformiot:
